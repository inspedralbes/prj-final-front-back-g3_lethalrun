name: Deploy to Clouding VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Git to use HTTPS
        run: |
          git config --global url."https://${{ secrets.GH_TOKEN }}@github.com/".insteadOf "git@github.com:"
      
      - name: Deploy to Clouding VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.CLOUDING_HOST }}
          username: ${{ secrets.CLOUDING_USER }}
          key: ${{ secrets.CLOUDING_SSH_KEY }}
          script: |
            # Crear un directorio temporal en la VM
            cd /var/www/lethalrun
            rm -rf temp_deploy
            mkdir temp_deploy
            cd temp_deploy

            # Clonar solo los últimos cambios del repositorio usando HTTPS
            git clone --depth=1 https://github.com/inspedralbes/prj-final-front-back-g3_lethalrun.git .
            
            # Copiar el backend (Node.js) a su ubicación correcta
            rsync -av --delete server/ /var/www/lethalrun/backend/
            
            # Instalar dependencias y apagar el servicio de Node.js
            cd /var/www/lethalrun/backend/
            npm install
            pm2 stop app  # Apagar el servicio (asegúrate de que "app" es el nombre correcto en PM2)

            # Copiar los archivos del frontend (Nuxt) a un directorio temporal
            rsync -av --delete nuxt/ /var/www/lethalrun/temp_nuxt/

            # Generar la build en la VM
            cd /home/usuario/temp_nuxt/
            npm install
            npm run build

            # Copiar SOLO la carpeta dist generada a frontend
            rsync -av --delete dist/ /var/www/lethalrun/frontend/

            # Iniciar el servicio nuevamente con PM2
            pm2 start /var/www/lethalrun/backend/server.js --name "app"  # Iniciar el servicio de Node.js

            # Eliminar archivos temporales
            cd /home/usuario
            rm -rf temp_deploy temp_nuxt

            echo "Deployment completed!"
